# ================================================
#  Post-Merge Automation
#  ------------------------------------------------
#  PURPOSE
#  When a Pull Request (PR) is merged, this workflow
#  handles follow-up tasks like closing issues,
#  adding labels, and updating external tools.
#  ------------------------------------------------
#  TRIGGER
#  â€“ on: pull_request.closed when merged == true
# ================================================

name: Post-Merge Automation

on:
  pull_request:
    types: [closed]

jobs:
  post-merge:
    # Only proceed if the PR was actually merged (not just closed)
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Close linked issues
      - name: Close linked issues
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const body = pr.body || '';
            
            // Find issue references like #123, fixes #456, closes #789
            const issueRefs = body.match(/(close[sd]?|fix(?:e[sd])?|resolve[sd]?)\s*#(\d+)/gi) || [];
            
            for (const ref of issueRefs) {
              const issueNumber = ref.match(/#(\d+)/)[1];
              try {
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  state: 'closed'
                });
                console.log(`Closed issue #${issueNumber}`);
              } catch (error) {
                console.log(`Failed to close issue #${issueNumber}: ${error.message}`);
              }
            }

      # Add merged label
      - name: Add merged label
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              labels: ['merged']
            });

      # Optional: Update external tools
      # Uncomment and configure as needed
      
      # - name: Update Todoist
      #   if: ${{ secrets.TODOIST_API_KEY != '' }}
      #   run: |
      #     echo "Update Todoist tasks related to PR #${{ github.event.pull_request.number }}"
      #     # Add your Todoist API calls here
      
      # - name: Update Linear
      #   if: ${{ secrets.LINEAR_API_KEY != '' }}
      #   run: |
      #     echo "Update Linear issues related to PR #${{ github.event.pull_request.number }}"
      #     # Add your Linear API calls here